version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: cdn-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-cdn123456}
      MYSQL_DATABASE: cdn_master
      MYSQL_USER: cdn_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cdn123456}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cdn-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: cdn-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-cdn123456}"]
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
      - cdn-network
    restart: unless-stopped

  # 主控端
  master:
    build:
      context: ../master
      dockerfile: Dockerfile
    container_name: cdn-master
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: cdn_user
      DB_PASS: ${MYSQL_PASSWORD:-cdn123456}
      DB_NAME: cdn_master
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: ${REDIS_PASSWORD:-cdn123456}
      MASTER_PORT: 8001
    ports:
      - "8001:8001"
    depends_on:
      - mysql
      - redis
    networks:
      - cdn-network
    restart: unless-stopped

  # 节点端
  node:
    build:
      context: ../node
      dockerfile: Dockerfile
    container_name: cdn-node
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: ${REDIS_PASSWORD:-cdn123456}
      NODE_PORT: 8002
      MASTER_URL: http://master:8001
    ports:
      - "8002:8002"
    depends_on:
      - redis
      - master
    networks:
      - cdn-network
    restart: unless-stopped

  # 管理端
  admin:
    build:
      context: ../admin
      dockerfile: Dockerfile
    container_name: cdn-admin
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: cdn_user
      DB_PASS: ${MYSQL_PASSWORD:-cdn123456}
      DB_NAME: cdn_admin
      ADMIN_PORT: 3000
      MASTER_API_URL: http://master:8001
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - master
    networks:
      - cdn-network
    restart: unless-stopped

  # 用户端
  user:
    build:
      context: ../user
      dockerfile: Dockerfile
    container_name: cdn-user
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_USER: cdn_user
      DB_PASS: ${MYSQL_PASSWORD:-cdn123456}
      DB_NAME: cdn_user
      USER_PORT: 3001
      MASTER_API_URL: http://master:8001
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:-}
      CLOUDFLARE_ZONE_ID: ${CLOUDFLARE_ZONE_ID:-}
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - master
    networks:
      - cdn-network
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:1.25-alpine
    container_name: cdn-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - admin
      - user
      - master
      - node
    networks:
      - cdn-network
    restart: unless-stopped

networks:
  cdn-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: 